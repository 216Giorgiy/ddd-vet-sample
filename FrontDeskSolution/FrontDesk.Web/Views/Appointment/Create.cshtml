@model FrontDesk.Web.Models.CreateAppointmentViewModel

@{
    ViewBag.Title = "New Appointment";
}

<h2>New Appointment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div id="form-container">
        <fieldset>
            <div class="editor-label">
                Appointment For (choose client)
            </div>
            <div class="k-content">
                <input type="text" id="client" style="width: 400px;" /><input type="button" value="Add New" id="newClientButton" />

                <p>Start typing to find a client</p>
            </div>
            <div data-bind="visible: showForm">
            <div class="editor-label">
                Patient / Pet Name
            </div>
            <div class="editor-field">
                <select id="patientDropDown" data-role="dropdownlist"
                    data-value-field="PatientId" data-text-field="Name"
                    data-bind="source: selectedClient.Patients"></select>
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.DateOfAppointment)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DateOfAppointment)
                @Html.ValidationMessageFor(model => model.DateOfAppointment)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Duration)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Duration)
                @Html.ValidationMessageFor(model => model.Duration)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Doctors)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.SelectedDoctor, Model.Doctors)
                @Html.ValidationMessageFor(model => model.SelectedDoctor)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Details)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Details)
                @Html.ValidationMessageFor(model => model.Details)
            </div>

            <p>
                <input type="submit" value="Create" />
            </p>
                </div>
        </fieldset>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script id="template" type="text/x-kendo-template">
        <img src="/Images/Clients/Steve_Smith.jpg" alt="${data.Name}" />
        <span>${data.Name}</span><br />
        #= renderPatientTemplate(data) #
    </script>
    <script id="patient-template" type="text/x-kendo-template">
        # $.each(data.Patients, function (index, item) {
            # <img src="/Images/Patients/${item.Name}.jpg" alt="${item.Name}" style="max-height:50px" />${item.Name} #
        });
        #
    </script>

    <script type="text/javascript">
        var viewModel = kendo.observable({
            selectedClient: { Patients: [] },
            selectedPatient: null,
            showForm: function () {
                return this.get("selectedClient").Patients.length > 0;
            }
        });
        $(document).ready(function () {
            var clients = new kendo.data.DataSource({
                type: "json",
                transport: {
                    read: {
                        dataType: "json",
                        url: "/api/clients"
                    }
                }
            });

            $("#client").kendoAutoComplete({
                select: onSelect,
                minLength: 1,
                filter: "contains",
                placeholder: "Type client name...",
                dataTextField: "Name",
                dataValueField: "ClientId",
                template: kendo.template($("#template").html()),
                dataSource: clients,
            }).data("kendoAutoComplete");

            $("#patients").kendoDropDownList({
                dataTextField: "Name",
                dataValueField: "PatientId",
            });
            kendo.bind($("#form-container"), viewModel);
        });

        function onSelect(clientItem) {
            var client = this.dataItem(clientItem.item.index());
            viewModel.set("selectedClient", client);
        }
        function renderPatientTemplate(data) {
            return kendo.Template.compile($('#patient-template').html())(data);
        }

        $('#newClientButton').click(function () {
            alert('Not done.');
        });
    </script>
    <style scoped>
        .demo-section {
            width: 400px;
            margin: 35px auto 50px;
            padding: 30px;
        }

            .demo-section h2 {
                text-transform: uppercase;
                font-size: 1.2em;
                margin-bottom: 10px;
            }

        #client-list .k-item {
            overflow: hidden; /* clear floated images */
        }

        #client-list img {
            -moz-box-shadow: 0 0 2px rgba(0,0,0,.4);
            -webkit-box-shadow: 0 0 2px rgba(0,0,0,.4);
            box-shadow: 0 0 2px rgba(0,0,0,.4);
            float: left;
            margin: 5px 20px 5px 0px;
        }

        #client-list h3 {
            margin: 30px 0 10px 0;
            font-size: 2em;
        }

        #client-list p {
            margin: 0;
        }
    </style>

}
